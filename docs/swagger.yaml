definitions:
  buxmodels.Transaction:
    properties:
      block_hash:
        description: BlockHash is a block hash that transaction is in.
        type: string
      block_height:
        description: BlockHeight is a block height that transaction is in.
        type: integer
      created_at:
        description: CreatedAt is a time when outer model was created.
        type: string
      deleted_at:
        description: DeletedAt is a time when outer model was deleted.
        type: string
      direction:
        description: TransactionDirection is a transaction direction (inbound/outbound).
        type: string
      draft_id:
        description: DraftID is a transaction related draft id.
        type: string
      fee:
        description: Fee is a transaction fee.
        type: integer
      hex:
        description: Hex is a transaction hex.
        type: string
      id:
        description: ID is a transaction id.
        type: string
      metadata:
        additionalProperties: true
        description: Metadata is a metadata map of outer model.
        type: object
      number_of_inputs:
        description: NumberOfInputs is a number of transaction inputs.
        type: integer
      number_of_outputs:
        description: NumberOfOutputs is a number of transaction outputs.
        type: integer
      output_value:
        description: OutputValue is a total output value.
        type: integer
      outputs:
        additionalProperties:
          type: integer
        description: Outputs represents all bux-transaction outputs. Will be shown
          only for admin.
        type: object
      status:
        description: Status is a transaction status.
        type: string
      total_value:
        description: TotalValue is a total input value.
        type: integer
      updated_at:
        description: UpdatedAt is a time when outer model was updated.
        type: string
      xpub_in_ids:
        description: XpubInIDs is a slice of xpub input ids.
        items:
          type: string
        type: array
      xpub_out_ids:
        description: XpubOutIDs is a slice of xpub output ids.
        items:
          type: string
        type: array
    type: object
  transports_http_endpoints_api_access.SignInResponse:
    properties:
      balance:
        $ref: '#/definitions/web-backend_domain_users.Balance'
      paymail:
        type: string
    type: object
  transports_http_endpoints_api_access.SignInUser:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  transports_http_endpoints_api_transactions.CreateTransaction:
    properties:
      password:
        type: string
      recipient:
        type: string
      satoshis:
        type: integer
    type: object
  transports_http_endpoints_api_users.RegisterResponse:
    properties:
      mnemonic:
        type: string
      paymail:
        type: string
    type: object
  transports_http_endpoints_api_users.RegisterUser:
    properties:
      email:
        type: string
      password:
        type: string
      passwordConfirmation:
        type: string
    type: object
  transports_http_endpoints_api_users.UserResponse:
    properties:
      balance:
        $ref: '#/definitions/web-backend_domain_users.Balance'
      email:
        type: string
      paymail:
        type: string
      userId:
        type: integer
    type: object
  web-backend_domain_users.Balance:
    properties:
      bsv:
        type: number
      satoshis:
        type: integer
      usd:
        type: number
    type: object
info:
  contact: {}
  description: This is an API for the spv-wallet-web-frontend.
  title: SPV Wallet web-backend
  version: "1.0"
paths:
  /api/v1/sign-in:
    post:
      consumes:
      - application/json
      parameters:
      - description: User sign in data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/transports_http_endpoints_api_access.SignInUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transports_http_endpoints_api_access.SignInResponse'
      summary: Sign in user
      tags:
      - user
  /api/v1/sign-out:
    post:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Sign out user
      tags:
      - user
  /api/v1/transaction:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/buxmodels.Transaction'
            type: array
      summary: Get all transactions.
      tags:
      - transaction
    post:
      parameters:
      - description: Create transaction data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/transports_http_endpoints_api_transactions.CreateTransaction'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/buxmodels.Transaction'
      summary: Create transaction.
      tags:
      - transaction
  /api/v1/transaction/{id}:
    get:
      parameters:
      - description: Transaction id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/buxmodels.Transaction'
      summary: Get transaction by id.
      tags:
      - transaction
  /api/v1/user:
    post:
      consumes:
      - application/json
      description: Register new user with given data, paymail is created based on
        username from sended email.
      parameters:
      - description: User data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/transports_http_endpoints_api_users.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transports_http_endpoints_api_users.RegisterResponse'
      summary: Register new user
      tags:
      - user
  /status:
    get:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Check the status of the server
      tags:
      - status
  /user:
    get:
      consumes:
      - '*/*'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transports_http_endpoints_api_users.UserResponse'
      summary: Get user information
      tags:
      - user
swagger: "2.0"
