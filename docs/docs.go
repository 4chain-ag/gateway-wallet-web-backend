// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/sign-in": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Sign in user",
                "parameters": [
                    {
                        "description": "User sign in data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_access.SignInUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_access.SignInResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/sign-out": {
            "post": {
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Sign out user",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/v1/transaction": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Get all transactions.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/buxmodels.Transaction"
                            }
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Create transaction.",
                "parameters": [
                    {
                        "description": "Create transaction data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_transactions.CreateTransaction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/buxmodels.Transaction"
                        }
                    }
                }
            }
        },
        "/api/v1/transaction/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Get transaction by id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/buxmodels.Transaction"
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "post": {
                "description": "Register new user with given data, paymail is created based on username from sended email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_users.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_users.RegisterResponse"
                        }
                    }
                }
            }
        },
        "/status": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "status"
                ],
                "summary": "Check the status of the server",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get user information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transports_http_endpoints_api_users.UserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "buxmodels.Transaction": {
            "type": "object",
            "properties": {
                "block_hash": {
                    "description": "BlockHash is a block hash that transaction is in.",
                    "type": "string"
                },
                "block_height": {
                    "description": "BlockHeight is a block height that transaction is in.",
                    "type": "integer"
                },
                "created_at": {
                    "description": "CreatedAt is a time when outer model was created.",
                    "type": "string"
                },
                "deleted_at": {
                    "description": "DeletedAt is a time when outer model was deleted.",
                    "type": "string"
                },
                "direction": {
                    "description": "TransactionDirection is a transaction direction (inbound/outbound).",
                    "type": "string"
                },
                "draft_id": {
                    "description": "DraftID is a transaction related draft id.",
                    "type": "string"
                },
                "fee": {
                    "description": "Fee is a transaction fee.",
                    "type": "integer"
                },
                "hex": {
                    "description": "Hex is a transaction hex.",
                    "type": "string"
                },
                "id": {
                    "description": "ID is a transaction id.",
                    "type": "string"
                },
                "metadata": {
                    "description": "Metadata is a metadata map of outer model.",
                    "type": "object",
                    "additionalProperties": true
                },
                "number_of_inputs": {
                    "description": "NumberOfInputs is a number of transaction inputs.",
                    "type": "integer"
                },
                "number_of_outputs": {
                    "description": "NumberOfOutputs is a number of transaction outputs.",
                    "type": "integer"
                },
                "output_value": {
                    "description": "OutputValue is a total output value.",
                    "type": "integer"
                },
                "outputs": {
                    "description": "Outputs represents all bux-transaction outputs. Will be shown only for admin.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "status": {
                    "description": "Status is a transaction status.",
                    "type": "string"
                },
                "total_value": {
                    "description": "TotalValue is a total input value.",
                    "type": "integer"
                },
                "updated_at": {
                    "description": "UpdatedAt is a time when outer model was updated.",
                    "type": "string"
                },
                "xpub_in_ids": {
                    "description": "XpubInIDs is a slice of xpub input ids.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "xpub_out_ids": {
                    "description": "XpubOutIDs is a slice of xpub output ids.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "transports_http_endpoints_api_access.SignInResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "$ref": "#/definitions/web-backend_domain_users.Balance"
                },
                "paymail": {
                    "type": "string"
                }
            }
        },
        "transports_http_endpoints_api_access.SignInUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "transports_http_endpoints_api_transactions.CreateTransaction": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "recipient": {
                    "type": "string"
                },
                "satoshis": {
                    "type": "integer"
                }
            }
        },
        "transports_http_endpoints_api_users.RegisterResponse": {
            "type": "object",
            "properties": {
                "mnemonic": {
                    "type": "string"
                },
                "paymail": {
                    "type": "string"
                }
            }
        },
        "transports_http_endpoints_api_users.RegisterUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "passwordConfirmation": {
                    "type": "string"
                }
            }
        },
        "transports_http_endpoints_api_users.UserResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "$ref": "#/definitions/web-backend_domain_users.Balance"
                },
                "email": {
                    "type": "string"
                },
                "paymail": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "web-backend_domain_users.Balance": {
            "type": "object",
            "properties": {
                "bsv": {
                    "type": "number"
                },
                "satoshis": {
                    "type": "integer"
                },
                "usd": {
                    "type": "number"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "SPV Wallet web-backend",
	Description:      "This is an API for the spv-wallet-web-frontend.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
